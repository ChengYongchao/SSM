<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--引入java配置文件-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="maxActive" value="10"/>
        <property name="maxIdle" value="5"/>
    </bean>

    <!--配置sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--指定Mybatis全局配置文件-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--指定数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--注入sqlSessionFactory-->
    <bean id="studentDao" class="com.kevin.dao.impl.StudentDaoImpl">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>


    <!--  配置方式创建bean  -->
    <bean id="student1" class="com.kevin.pojo.Student">
        <property name="name" value="xiaoming"></property>
        <property name="age" value="23"></property>
    </bean>
    <!--  工厂方式创建bean -->
    <bean id="StudentFactory" class="com.kevin.dao.StudentFactory"></bean>
    <bean id="getStudent1" factory-method="getStudent" factory-bean="StudentFactory">
        <constructor-arg index="0" value="xiaoming"></constructor-arg>
        <constructor-arg index="1" value="24"></constructor-arg>
    </bean>
    <!--注解方式创建bean-->

    <context:component-scan base-package="com.kevin.pojo"/>


    <!--SpringMvc-->
    <!-- 扫描service包下所有使用注解的类型-->
    <context:component-scan base-package="com.kevin.service"/>

    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.kevin.controller" />
    <mvc:annotation-driven/>
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库的链接池 -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 配置基于注解的声明式事务默认使用注解来管理事务行为-->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>
